name: Robot Framework CI

on:
  push:
    branches:
      - main
  pull_request:
  workflow_dispatch:

jobs:
  Run-Test:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          distribution: "adopt"
          java-version: "11"

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libgl1-mesa-glx
          sudo apt-get install -y android-tools-adb android-tools-fastboot
          sudo apt-get install -y wget tar unzip

      - name: Download and set up Android SDK
        run: |
          wget https://dl.google.com/android/repository/commandlinetools-linux-7583922_latest.zip -O cmdline-tools.zip
          unzip cmdline-tools.zip -d $HOME
          mkdir -p $HOME/android-sdk/cmdline-tools
          mv $HOME/cmdline-tools $HOME/android-sdk/cmdline-tools/latest
          echo 'export ANDROID_SDK_ROOT=$HOME/android-sdk' >> $GITHUB_ENV
          echo 'export PATH=$PATH:$ANDROID_SDK_ROOT/cmdline-tools/latest/bin' >> $GITHUB_ENV
          echo 'export PATH=$PATH:$ANDROID_SDK_ROOT/platform-tools' >> $GITHUB_ENV
          source $GITHUB_ENV
          sdkmanager --sdk_root=$ANDROID_SDK_ROOT "platform-tools" "platforms;android-30" "build-tools;30.0.3" "system-images;android-30;google_apis;x86_64" "emulator"
          echo 'no' | avdmanager create avd -n test -k "system-images;android-30;google_apis;x86_64" --force

      - name: Start Android Emulator
        run: |
          $ANDROID_SDK_ROOT/emulator/emulator -avd test -no-window -no-audio -no-boot-anim -camera-back none -camera-front none -gpu swiftshader_indirect -no-snapshot &
          adb wait-for-device
          adb shell settings put global window_animation_scale 0.0
          adb shell settings put global transition_animation_scale 0.0
          adb shell settings put global animator_duration_scale 0.0
          sleep 60

      - name: Install Appium
        run: |
          npm install -g appium
          appium -p 4723 &
          sleep 10

      - uses: actions/cache@v3
        id: cache
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}

      - name: Install pip dependencies
        run: |
          pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run Test
        run: python -m robot --outputdir results android/features

      - name: Run Test and create report
        run: python -m robot -d reports -x junit-report.xml android/features

      - name: Run Robot Framework tests and generate report
        run: |
          echo "ROBOT_RC=$?" >> "$GITHUB_ENV"

      # - name: If Auto Test Pass Rate Not 100%, Job Will Fail
      #   if: env.ROBOT_RC != '0'
      #   run: |
      #     echo "Auto Test Pass Rate Not 100%, Please Check Test Result"
      #     exit 1

      - name: Publish test results
        uses: actions/upload-artifact@v2
        with:
          name: robot-test-results
          path: results
